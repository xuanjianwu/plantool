* Introduction
  The functions usable wrapped from main are tested and documented
* run
  The main function with name changed
** do_error
   change exit(1) to return 1;
   #+BEGIN_SRC c
   return 1;
   #+END_SRC
* Documentation
  - Usage of IPP
    #+BEGIN_SRC python
    >>> import ipp
    >>> argv = ['ipp', '-o', 'domain.pddl', '-f', 'problem.pddl']
    >>> ipp.run(argv)
    #+END_SRC

  - Instructions about arguments:
#+BEGIN_SRC 
OPTIONS     DESCRIPTIONS
-p <str>    path for operator and fact file
-o <str>    operator file name
-f <str>    fact file name

-i <num>    run-time information level( preset: 1 )
     0      nothing
     1      info on action number, graph, search and plan
     2      1 + info on problem constants, types and predicates
     3      1 + 2 + loaded operators, initial and goal state
     4      1 + predicates and their inertia status
     5      1 + 4 + goal state and operators with unary inertia encoded
     6      1 + actions, initial and goal state after expansion of variables
     7      1 + facts selected as relevant to the problem
     8      1 + final domain representation
 > 100      1 + various debugging information

-W          write complete graph to text files after planning
-w <str>    specify name for graph output files( preset: graph )

-m <num>    build graph up to level <num> without search
-S          don't do complete subset test in memoization

#+END_SRC
